From 06175a3a52139065845292c10130c5b051d128ef Mon Sep 17 00:00:00 2001
From: Nitheesh Sekar <nsekar@codeaurora.org>
Date: Mon, 5 Jun 2017 14:31:44 +0530
Subject: ipq806x: usb: Reset war for SS device enum issue

Reset again so that if SS device was detected as HS, the
second reset would push it to SS.

Change-Id: I4c76daf8ebeb2d7098d4953af4e01c9ba56342ae
Signed-off-by: Nitheesh Sekar <nsekar@codeaurora.org>
---
 drivers/usb/core/hub.c                        | 9 +++++++++
 drivers/usb/dwc3/core.c                       | 2 ++
 drivers/usb/dwc3/core.h                       | 1 +
 drivers/usb/dwc3/host.c                       | 1 +
 drivers/usb/host/xhci-plat.c                  | 3 +++
 include/linux/usb/hcd.h                       | 3 +++
 include/linux/usb/xhci_pdriver.h              | 1 +
 7 files changed, 20 insertions(+)

diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c
index c100ab6..be625d4 100644
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -4284,6 +4284,15 @@ hub_port_init(struct usb_hub *hub, struct usb_device *udev, int port1,
 	retval = hub_port_reset(hub, port1, udev, delay, false);
 	if (retval < 0)		/* error or disconnect */
 		goto fail;
+
+	if (hcd->primary_hcd->usb3_dev_reset_quirk) {
+		if (udev->speed != USB_SPEED_SUPER) {
+			retval = hub_port_reset(hub, port1, udev, delay, false);
+			if (retval < 0)		/* error or disconnect */
+				goto fail;
+		}
+	}
+
 	/* success, speed is known */
 
 	retval = -ENODEV;
diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index f9c08fe..177e2e0 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -962,6 +962,8 @@ static int dwc3_probe(struct platform_device *pdev)
 				"snps,dis-u2-freeclk-exists-quirk");
 	dwc->dis_del_phy_power_chg_quirk = device_property_read_bool(dev,
 				"snps,dis-del-phy-power-chg-quirk");
+	dwc->usb3_dev_reset_quirk = device_property_read_bool(dev,
+				"usb3_dev_reset_quirk");
 
 	dwc->tx_de_emphasis_quirk = device_property_read_bool(dev,
 				"snps,tx_de_emphasis_quirk"); 
diff --git a/drivers/usb/dwc3/core.h b/drivers/usb/dwc3/core.h
index d3cda1f..d13dd24 100644
--- a/drivers/usb/dwc3/core.h
+++ b/drivers/usb/dwc3/core.h
@@ -869,6 +869,7 @@ struct dwc3 {
 	unsigned		dis_rxdet_inp3_quirk:1;
 	unsigned		dis_u2_freeclk_exists_quirk:1;
 	unsigned		dis_del_phy_power_chg_quirk:1;
+	unsigned		usb3_dev_reset_quirk:1;
 
 	unsigned		tx_de_emphasis_quirk:1;
 	unsigned		tx_de_emphasis:2;
diff --git a/drivers/usb/dwc3/host.c b/drivers/usb/dwc3/host.c
index 567220c..18505f9 100644
--- a/drivers/usb/dwc3/host.c
+++ b/drivers/usb/dwc3/host.c
@@ -21,7 +21,7 @@
 
 int dwc3_host_init(struct dwc3 *dwc)
 {
-	struct property_entry	props[3];
+	struct property_entry	props[4];
 	struct platform_device	*xhci;
 	int			ret, irq;
 	struct resource		*res;
@@ -105,6 +105,9 @@ int dwc3_host_init(struct dwc3 *dwc)
 	if (dwc->revision <= DWC3_REVISION_300A)
 		props[prop_idx++].name = "quirk-broken-port-ped";
 
+	if (dwc->usb3_dev_reset_quirk)
+		props[prop_idx++].name = "usb3_dev_reset_quirk";
+
 	if (prop_idx) {
 		ret = platform_device_add_properties(xhci, props);
 		if (ret) {
diff --git a/drivers/usb/host/xhci-plat.c b/drivers/usb/host/xhci-plat.c
index dc0e3d9..1cb0158 100644
--- a/drivers/usb/host/xhci-plat.c
+++ b/drivers/usb/host/xhci-plat.c
@@ -127,6 +127,9 @@ static int xhci_plat_probe(struct platform_device *pdev)
 	hcd->rsrc_start = res->start;
 	hcd->rsrc_len = resource_size(res);
 
+	if (dwc->usb3_dev_reset_quirk)
+		hcd->usb3_dev_reset_quirk = dwc->usb3_dev_reset_quirk;
+
 	/*
 	 * Not all platforms have a clk so it is not an error if the
 	 * clock does not exists.
diff --git a/include/linux/usb/hcd.h b/include/linux/usb/hcd.h
index bc6fddd..ccca90d 100644
--- a/include/linux/usb/hcd.h
+++ b/include/linux/usb/hcd.h
@@ -158,6 +158,9 @@ struct usb_hcd {
 	unsigned		amd_resume_bug:1; /* AMD remote wakeup quirk */
 	unsigned		can_do_streams:1; /* HC supports streams */
 	unsigned		tpl_support:1; /* OTG & EH TPL support */
+	unsigned		usb3_dev_reset_quirk:1; /* USB device reset
+							 * quirk.
+							 */
 	unsigned		cant_recv_wakeups:1;
 			/* wakeup requests from downstream aren't received */
  
-- 
cgit v1.1
